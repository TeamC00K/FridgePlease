{"ast":null,"code":"var _jsxFileName = \"C:\\\\ToyProjects\\\\FridgePlease\\\\react-app\\\\src\\\\components\\\\main\\\\Item.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardActionArea from '@mui/material/CardActionArea';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Avatar from '@mui/material/Avatar';\nimport Slider from '@mui/material/Slider';\nimport { Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Item(props) {\n  _s();\n\n  const {\n    item\n  } = props;\n  const [bgColor, setBgColor] = useState('');\n  useEffect(() => {\n    const start = item.mfgDate.getTime();\n    const end = item.expDate.getTime();\n    const now = Date.now();\n    const elapsedRate = (end - now) / (end - start);\n\n    if (elapsedRate < 0.1) {\n      setBgColor('#ffa19950');\n    } else if (elapsedRate < 0.3) {\n      setBgColor('#ffda9950');\n    } else {\n      setBgColor('#d6ffa650');\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(CardActionArea, {\n    onClick: () => {\n      console.log('clicked');\n    },\n    sx: {\n      marginBottom: '10px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        backgroundColor: bgColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: '15vh',\n          display: 'flex',\n          backgroundColor: bgColor\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          sx: {\n            height: '15vh',\n            width: '15vh',\n            p: 1,\n            flexShrink: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: item.image,\n            sx: {\n              width: 1,\n              height: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            height: '15vh',\n            p: 1,\n            overflow: 'hidden'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h2\",\n            variant: \"h5\",\n            sx: {\n              fontWeight: 'bold'\n            },\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            sx: {\n              fontWeight: 'bold'\n            },\n            children: [item.expDate.getMonth() + 1, \"\\uC6D4 \", item.expDate.getDate(), \"\\uC77C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            color: \"text.secondary\",\n            children: [item.mfgDate.getMonth() + 1, \"\\uC6D4 \", item.mfgDate.getDate(), \"\\uC77C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            noWrap: \"true\",\n            children: item.memo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex'\n        },\n        children: [item.countable && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          sx: {\n            fontWeight: 'bold',\n            width: '10vw'\n          },\n          children: item.curVol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          value: item.curVol / item.totalVol * 100,\n          sx: {\n            paddingX: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Item, \"9KIlIdBOnP4iwPHj91kpBw8ydWA=\");\n\n_c = Item;\nItem.propTypes = {\n  item: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    expDate: PropTypes.instanceOf(Date).isRequired,\n    mfgDate: PropTypes.instanceOf(Date).isRequired,\n    memo: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    totalVol: PropTypes.number.isRequired,\n    curVol: PropTypes.number.isRequired,\n    countable: PropTypes.bool.isRequired\n  }).isRequired\n};\nexport default Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"sources":["C:/ToyProjects/FridgePlease/react-app/src/components/main/Item.jsx"],"names":["React","useState","useEffect","PropTypes","Typography","Card","CardActionArea","CardContent","CardMedia","Avatar","Slider","Box","Item","props","item","bgColor","setBgColor","start","mfgDate","getTime","end","expDate","now","Date","elapsedRate","console","log","marginBottom","backgroundColor","height","display","width","p","flexShrink","image","overflow","fontWeight","name","getMonth","getDate","memo","countable","curVol","totalVol","paddingX","propTypes","shape","string","isRequired","category","instanceOf","number","bool"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardActionArea from '@mui/material/CardActionArea';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Avatar from '@mui/material/Avatar';\nimport Slider from '@mui/material/Slider';\nimport { Box } from '@mui/material';\n\nfunction Item(props) {\n  const { item } = props;\n\n  const [bgColor, setBgColor] = useState('');\n\n  useEffect(() => {\n    const start = item.mfgDate.getTime();\n    const end = item.expDate.getTime();\n    const now = Date.now();\n    const elapsedRate = (end - now) / (end - start);\n    if (elapsedRate < 0.1) {\n      setBgColor('#ffa19950');\n    } else if (elapsedRate < 0.3) {\n      setBgColor('#ffda9950');\n    } else {\n      setBgColor('#d6ffa650');\n    }\n  });\n\n  return (\n    <CardActionArea\n      onClick={() => {\n        console.log('clicked');\n      }}\n      sx={{ marginBottom: '10px' }}\n    >\n      <Card\n        sx={{\n          backgroundColor: bgColor,\n        }}\n      >\n        <Box\n          sx={{\n            height: '15vh',\n            display: 'flex',\n            backgroundColor: bgColor,\n          }}\n        >\n          <CardMedia\n            sx={{\n              height: '15vh',\n              width: '15vh',\n              p: 1,\n              flexShrink: 0,\n            }}\n          >\n            <Avatar src={item.image} sx={{ width: 1, height: 1 }} />\n          </CardMedia>\n          <CardContent\n            sx={{\n              height: '15vh',\n              p: 1,\n              overflow: 'hidden',\n            }}\n          >\n            <Typography component=\"h2\" variant=\"h5\" sx={{ fontWeight: 'bold' }}>\n              {item.name}\n            </Typography>\n            <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\n              {item.expDate.getMonth() + 1}월 {item.expDate.getDate()}일\n            </Typography>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\n              {item.mfgDate.getMonth() + 1}월 {item.mfgDate.getDate()}일\n            </Typography>\n            <Typography variant=\"subtitle1\" noWrap=\"true\">\n              {item.memo}\n            </Typography>\n          </CardContent>\n        </Box>\n        <Box sx={{ display: 'flex' }}>\n          {item.countable && (\n            <Typography\n              variant=\"subtitle1\"\n              sx={{ fontWeight: 'bold', width: '10vw' }}\n            >\n              {item.curVol}\n            </Typography>\n          )}\n          <Slider\n            value={(item.curVol / item.totalVol) * 100}\n            sx={{ paddingX: 1 }}\n          />\n        </Box>\n      </Card>\n    </CardActionArea>\n  );\n}\n\nItem.propTypes = {\n  item: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    expDate: PropTypes.instanceOf(Date).isRequired,\n    mfgDate: PropTypes.instanceOf(Date).isRequired,\n    memo: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    totalVol: PropTypes.number.isRequired,\n    curVol: PropTypes.number.isRequired,\n    countable: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}