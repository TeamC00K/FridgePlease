{"ast":null,"code":"var _jsxFileName = \"C:\\\\ToyProjects\\\\FridgePlease\\\\react-app\\\\src\\\\pages\\\\RegisterPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { registerUser } from '../modules/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterPage() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    control,\n    handleSubmit\n  } = useForm({\n    defaultValues: {\n      name: '',\n      id: '',\n      passwd: ''\n    }\n  }); // const { isSuccess, isError, errorMessage } = useSelector(userSelector);\n\n  const onSubmit = async data => {\n    await dispatch(registerUser(data));\n  };\n  /*\n  useEffect(() => {\n    if (isSuccess) {\n      dispatch(clearState());\n    }\n    if (isError) {\n      console.error(errorMessage);\n      dispatch(clearState());\n    }\n  }, [isSuccess, isError]);\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          m: 1,\n          bgcolor: 'secondary.main'\n        },\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        noValidate: true,\n        onSubmit: handleSubmit(onSubmit),\n        sx: {\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"name\",\n              control: control,\n              render: _ref => {\n                let {\n                  field\n                } = _ref;\n                return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                  required: true,\n                  fullWidth: true,\n                  id: \"name\",\n                  label: \"Name\",\n                  name: \"name\",\n                  autoFocus: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 19\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"id\",\n              control: control,\n              render: _ref2 => {\n                let {\n                  field\n                } = _ref2;\n                return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                  required: true,\n                  fullWidth: true,\n                  id: \"id\",\n                  label: \"Id\",\n                  name: \"email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"passwd\",\n              control: control,\n              render: _ref3 => {\n                let {\n                  field\n                } = _ref3;\n                return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                  required: true,\n                  fullWidth: true,\n                  id: \"passwd\",\n                  label: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterPage, \"9jDWvVVQfLgG0Bzyu+/lFjg/J9c=\", false, function () {\n  return [useDispatch, useForm];\n});\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["C:/ToyProjects/FridgePlease/react-app/src/pages/RegisterPage.jsx"],"names":["React","useForm","Controller","useDispatch","Avatar","Button","TextField","Grid","Box","LockOutlinedIcon","Typography","Container","registerUser","RegisterPage","dispatch","control","handleSubmit","defaultValues","name","id","passwd","onSubmit","data","marginTop","display","flexDirection","alignItems","m","bgcolor","mt","field","mb"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\n\nimport { registerUser } from '../modules/user';\n\nfunction RegisterPage() {\n  const dispatch = useDispatch();\n\n  const { control, handleSubmit } = useForm({\n    defaultValues: {\n      name: '',\n      id: '',\n      passwd: '',\n    },\n  });\n  // const { isSuccess, isError, errorMessage } = useSelector(userSelector);\n\n  const onSubmit = async data => {\n    await dispatch(registerUser(data));\n  };\n\n  /*\n  useEffect(() => {\n    if (isSuccess) {\n      dispatch(clearState());\n    }\n    if (isError) {\n      console.error(errorMessage);\n      dispatch(clearState());\n    }\n  }, [isSuccess, isError]);\n  */\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        <Box\n          component=\"form\"\n          noValidate\n          onSubmit={handleSubmit(onSubmit)}\n          sx={{ mt: 3 }}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Controller\n                name=\"name\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    {...field}\n                    required\n                    fullWidth\n                    id=\"name\"\n                    label=\"Name\"\n                    name=\"name\"\n                    autoFocus\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Controller\n                name=\"id\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    {...field}\n                    required\n                    fullWidth\n                    id=\"id\"\n                    label=\"Id\"\n                    name=\"email\"\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Controller\n                name=\"passwd\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    {...field}\n                    required\n                    fullWidth\n                    id=\"passwd\"\n                    label=\"Password\"\n                  />\n                )}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Register\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\nexport default RegisterPage;\n"]},"metadata":{},"sourceType":"module"}