{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { login, register } from '../lib/api/auth';\nexport const registerUser = createAsyncThunk('users/registerUser', async (_ref, thunkAPI) => {\n  let {\n    name,\n    id,\n    passwd\n  } = _ref;\n\n  try {\n    const response = await register({\n      name,\n      id,\n      passwd\n    });\n    const {\n      data\n    } = response;\n    console.log('data', data);\n\n    if (response.status === 200) {\n      // localStorage.setItem('token', data.token);\n      return { ...data\n      };\n    }\n\n    return thunkAPI.rejectWithValue(data);\n  } catch (e) {\n    console.log('Error', e.response.data);\n    return thunkAPI.rejectWithValue(e.response.data);\n  }\n});\nexport const loginUser = createAsyncThunk('users/loginUser', async (_ref2, thunkAPI) => {\n  let {\n    id,\n    passwd\n  } = _ref2;\n\n  try {\n    const response = await login({\n      id,\n      passwd\n    });\n    const {\n      data\n    } = response;\n\n    if (response.status === 200) {\n      // localStorage.setItem('token', data.token);\n      return { ...data\n      };\n    }\n\n    return thunkAPI.rejectWithValue(data);\n  } catch (e) {\n    console.log('Error', e.response.data);\n    return thunkAPI.rejectWithValue(e.response.data);\n  }\n});\nexport const userSlice = createSlice({\n  name: 'users',\n  initialState: {\n    name: '',\n    id: '',\n    isFetching: false,\n    isSuccess: false,\n    isError: false,\n    errorMessage: ''\n  },\n  reducers: {// Reducer comes here\n  },\n  extraReducers: {\n    [registerUser.fulfilled]: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.isFetching = false;\n      state.isSuccess = true;\n      state.name = payload.user.name;\n      state.id = payload.user.id;\n    },\n    [registerUser.pending]: state => {\n      state.isFetching = true;\n    },\n    [registerUser.rejected]: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      state.isFetching = false;\n      state.isError = true;\n      state.errorMessage = payload.message;\n    },\n    [loginUser.fulfilled]: (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      state.isFetching = false;\n      state.isSuccess = true;\n      state.name = payload.user.name;\n      state.id = payload.user.id;\n    },\n    [loginUser.pending]: state => {\n      state.isFetching = true;\n    },\n    [loginUser.rejected]: (state, _ref6) => {\n      let {\n        payload\n      } = _ref6;\n      state.isFetching = false;\n      state.isError = true;\n      state.errorMessage = payload.message;\n    }\n  }\n});\nexport const userSelector = state => state.user;","map":{"version":3,"sources":["C:/ToyProjects/FridgePlease/react-app/src/modules/user.js"],"names":["createSlice","createAsyncThunk","login","register","registerUser","thunkAPI","name","id","passwd","response","data","console","log","status","rejectWithValue","e","loginUser","userSlice","initialState","isFetching","isSuccess","isError","errorMessage","reducers","extraReducers","fulfilled","state","payload","user","pending","rejected","message","userSelector"],"mappings":"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","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { login, register } from '../lib/api/auth';\n\nexport const registerUser = createAsyncThunk(\n  'users/registerUser',\n  async ({ name, id, passwd }, thunkAPI) => {\n    try {\n      const response = await register({ name, id, passwd });\n      const { data } = response;\n      console.log('data', data);\n      if (response.status === 200) {\n        // localStorage.setItem('token', data.token);\n        return { ...data };\n      }\n      return thunkAPI.rejectWithValue(data);\n    } catch (e) {\n      console.log('Error', e.response.data);\n      return thunkAPI.rejectWithValue(e.response.data);\n    }\n  },\n);\n\nexport const loginUser = createAsyncThunk(\n  'users/loginUser',\n  async ({ id, passwd }, thunkAPI) => {\n    try {\n      const response = await login({ id, passwd });\n      const { data } = response;\n      if (response.status === 200) {\n        // localStorage.setItem('token', data.token);\n        return { ...data };\n      }\n      return thunkAPI.rejectWithValue(data);\n    } catch (e) {\n      console.log('Error', e.response.data);\n      return thunkAPI.rejectWithValue(e.response.data);\n    }\n  },\n);\n\nexport const userSlice = createSlice({\n  name: 'users',\n  initialState: {\n    name: '',\n    id: '',\n    isFetching: false,\n    isSuccess: false,\n    isError: false,\n    errorMessage: '',\n  },\n  reducers: {\n    // Reducer comes here\n  },\n  extraReducers: {\n    [registerUser.fulfilled]: (state, { payload }) => {\n      state.isFetching = false;\n      state.isSuccess = true;\n      state.name = payload.user.name;\n      state.id = payload.user.id;\n    },\n    [registerUser.pending]: state => {\n      state.isFetching = true;\n    },\n    [registerUser.rejected]: (state, { payload }) => {\n      state.isFetching = false;\n      state.isError = true;\n      state.errorMessage = payload.message;\n    },\n    [loginUser.fulfilled]: (state, { payload }) => {\n      state.isFetching = false;\n      state.isSuccess = true;\n      state.name = payload.user.name;\n      state.id = payload.user.id;\n    },\n    [loginUser.pending]: state => {\n      state.isFetching = true;\n    },\n    [loginUser.rejected]: (state, { payload }) => {\n      state.isFetching = false;\n      state.isError = true;\n      state.errorMessage = payload.message;\n    },\n  },\n});\n\nexport const userSelector = state => state.user;\n"]},"metadata":{},"sourceType":"module"}